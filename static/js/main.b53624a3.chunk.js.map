{"version":3,"sources":["components/SplashScreen.js","components/SearchArea.js","components/Repo.js","components/ReposList.js","components/Pagination.js","components/DetailInfo.js","components/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","splashWrapper","background","position","width","height","color","splashText","top","left","marginRight","transform","fontFamily","fontSize","textAlign","SplashScreen","props","classes","react_default","a","createElement","Fade","in","splashScreen","style","transitionDelay","className","Zoom","searchInput","margin","borderRadius","searchForm","searchWrapper","searchButton","padding","sortSelect","minWidth","marginBottom","Transition","React","forwardRef","ref","Slide","Object","assign","direction","SearchArea","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","Grid","container","justify","item","xs","onSubmit","handleSubmit","TextField","required","id","label","variant","onChange","handleChange","searchValue","length","Button","onClick","repos","currentRepo","Select","value","sortBy","sortRepos","MenuItem","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogActions","repoImage","maxWidth","repoTitle","overflow","textOverflow","whiteSpace","repoContent","minHeight","heart","transition","cursor","&:hover","Repo","favoritRepos","localStorage","getItem","sm","md","lg","xl","Card","CardActionArea","viewRepoInfo","repoId","alignItems","CardMedia","src","image","alt","repoName","CardContent","Typography","gutterBottom","component","data-tip","dist_default","place","type","effect","created_at","substring","rating","description","CardActions","size","includes","removeFromFavorites","addToFavorites","ReposList","Container","spacing","map","repo","i","components_Repo","key","name","stargazers_count","owner","avatar_url","Pagination","showMoreSearch","title","text","marginTop","closeInfo","display","DetailInfo","full_name","login","href","html_url","target","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchTerm","preventDefault","fetch","concat","state","then","data","json","arraySort","toConsumableArray","items","reverse","totalResults","total_count","currentPage","moreItems","newRepos","filteredRepos","filter","newCurrentRepo","updateFavorites","favoritesId","Boolean","join","setItem","split","_this2","setTimeout","components_SplashScreen","components_SearchArea","components_ReposList","components_DetailInfo","components_Pagination","Component","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b53624a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nconst useStyles = makeStyles({\r\n    splashWrapper: {\r\n      background: 'linear-gradient(45deg, rgba(30,87,153,0) 0%, rgba(30,87,153,0.8) 15%, rgba(30,87,153,1) 19%, rgba(30,87,153,1) 20%, rgba(41,137,216,1) 50%, rgba(30,87,153,1) 80%, rgba(30,87,153,1) 81%, rgba(30,87,153,0.8) 85%, rgba(30,87,153,0) 100%)',\r\n      position: 'relative',\r\n      width: '100%',\r\n      height: '100vh',\r\n      color: 'white',\r\n    },\r\n    splashText: {\r\n        position: 'absolute',\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        fontFamily: 'Acme',\r\n        fontSize: '40px',\r\n        textAlign: 'center',   \r\n    },\r\n  });\r\n\r\nconst SplashScreen = (props) => {\r\nconst classes = useStyles();\r\n    return(\r\n        <Fade in={props.splashScreen} style={{ transitionDelay: props.splashScreen ? '500ms' : '0ms' }}>\r\n        <div className={classes.splashWrapper}>\r\n            <div className={classes.splashText}>\r\n                <Zoom in={props.splashScreen} style={{ transitionDelay: props.splashScreen ? '800ms' : '0ms' }}>\r\n                <p>GitHub App</p>\r\n                </Zoom>\r\n                <Zoom in={props.splashScreen} style={{ transitionDelay: props.splashScreen ? '1100ms' : '0ms' }}>\r\n                <p>Boyko Evgeniy</p>\r\n                </Zoom>\r\n            </div>\r\n        </div>\r\n        </Fade>\r\n    )\r\n}\r\n\r\nexport default SplashScreen","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles({\r\n  searchInput: {\r\n    margin: '0',\r\n    width: '50%',\r\n    background: 'white',\r\n    borderRadius: '4px',\r\n    marginRight: '10px',\r\n  },\r\n  searchForm: {\r\n    textAlign: 'center',\r\n    margin: '25px 0 10px',\r\n  },\r\n  searchWrapper: {\r\n    textAlign: 'center',\r\n  },\r\n  searchButton: {\r\n      padding: '8px',\r\n  },\r\n  sortSelect: {\r\n    minWidth: '120px',\r\n    marginBottom: '20px',\r\n  }\r\n});\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst SearchArea = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n    return(\r\n      <div className={classes.searchWrapper}>\r\n        <Grid container\r\n          justify=\"center\">\r\n          <Grid item xs={12}>\r\n            <form onSubmit={props.handleSubmit} className={classes.searchForm}>\r\n              <TextField\r\n                required={true}\r\n                className={classes.searchInput}\r\n                id=\"outlined-dense\"\r\n                label=\"Search repository\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                onChange={props.handleChange}/>\r\n              {props.searchValue.length > 0 ?\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.searchButton} onClick={props.handleSubmit}>\r\n                Search\r\n              </Button> :\r\n              <Button variant=\"contained\" color=\"primary\" className={classes.searchButton} onClick={handleClickOpen}>\r\n                Search\r\n              </Button>}\r\n            </form>\r\n          </Grid>\r\n        </Grid>\r\n        {props.repos.length > 0 && props.currentRepo === null ? \r\n        <div>\r\n          <span>SortBy</span>\r\n          <Select\r\n            className={classes.sortSelect}\r\n            value={props.sortBy}\r\n            onChange={props.sortRepos}>\r\n            <MenuItem value={'name'}>Name</MenuItem>\r\n            <MenuItem value={'stargazers_count'}>Rating</MenuItem>\r\n            <MenuItem value={'created_at'}>Date</MenuItem>\r\n          </Select>\r\n        </div> : ''}\r\n        <Dialog\r\n          open={open}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-slide-title\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n          >\r\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"Please, enter search value\"}</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\">\r\n              Ok\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default SearchArea","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ReactTooltip from 'react-tooltip';\r\n// import LinesEllipsis from 'react-lines-ellipsis';\r\n\r\nconst useStyles = makeStyles({\r\n    repoImage: {\r\n        maxWidth: '100%',\r\n        height: 'auto',\r\n        margin: '0',\r\n    },\r\n    repoTitle: {\r\n        overflow: \"hidden\",\r\n        textOverflow: \"ellipsis\",\r\n        whiteSpace: \"nowrap\",\r\n    },\r\n    repoContent: {\r\n        minHeight: '139.39px',\r\n    },\r\n    heart: {\r\n        transition: '.3s',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            transform: 'scale(1.2)',\r\n        }\r\n    }\r\n  });\r\n\r\n\r\nconst Repo = (props) => {\r\n    const classes = useStyles();\r\n    const favoritRepos = localStorage.getItem('favoritesId')\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n            <Card>\r\n                <CardActionArea className={classes.repoContent} onClick={() => props.viewRepoInfo(props.repoId)}>\r\n                    <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item xs={2}>\r\n                            <CardMedia><img className={classes.repoImage} src={props.image} alt={props.repoName}/></CardMedia>\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <CardContent>\r\n                            <Typography gutterBottom color='primary' variant=\"h5\" component=\"h2\" data-tip={props.repoName} className={classes.repoTitle}>\r\n                                {props.repoName}\r\n                                <ReactTooltip place=\"bottom\" type=\"info\" effect=\"float\" />\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" component=\"div\" className={classes.repoTitle}>\r\n                                Create: {props.created_at.substring(0,10)}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" component=\"div\" className={classes.repoTitle}>\r\n                                Rating: {props.rating}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"div\" className={classes.repoTitle}>\r\n                                {props.description}\r\n                            </Typography>\r\n                            </CardContent>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => props.viewRepoInfo(props.repoId)}>\r\n                    View More\r\n                    </Button>\r\n                    {favoritRepos != null && favoritRepos.includes(props.repoId) ?\r\n                    <div className={classes.heart} onClick={() => props.removeFromFavorites(props.repoId)}>\r\n                    <i className=\"fas fa-heart\" style={{fontSize: '25px', color: 'red'}} ></i>\r\n                    </div> :\r\n                    <div className={classes.heart} onClick={() => props.addToFavorites(props.repoId)}>\r\n                    <i className=\"far fa-heart\" style={{fontSize: '25px'}} ></i>\r\n                    </div>}\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Repo","import React from 'react';\r\nimport Repo from './Repo'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst ReposList = (props) => {\r\n    return(\r\n        <Container maxWidth='lg'>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    props.repos.map((repo, i) =>{\r\n                        return (\r\n                            <Repo key={i} repoName={repo.name} rating={repo.stargazers_count} created_at={repo.created_at} image={repo.owner.avatar_url} description={repo.description} repoId={repo.id} addToFavorites={props.addToFavorites} removeFromFavorites={props.removeFromFavorites} viewRepoInfo={props.viewRepoInfo} />\r\n                        )\r\n                    })\r\n                }\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ReposList","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst Pagination = (props) => {\r\n    return (\r\n        <Grid container justify=\"center\" style={{margin: '20px 0 20px'}}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={props.showMoreSearch}>\r\n          Show More\r\n        </Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\nexport default Pagination","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles({\r\n    title: {\r\n        fontFamily: 'Acme',\r\n        fontSize: '20px',\r\n        margin: '0',\r\n    },\r\n    text: {\r\n        marginTop: '5px',\r\n    },\r\n    repoImage: {\r\n        maxWidth: '100%',\r\n    },\r\n    closeInfo: {\r\n        display: 'inline-block',\r\n        padding: '15px',\r\n        cursor: 'pointer',\r\n        transition: '.3s',\r\n        '&:hover': {\r\n            transform: 'scale(1.2)',\r\n        }\r\n    },\r\n    heart: {\r\n        transition: '.3s',\r\n        cursor: 'pointer',\r\n        display: 'block',\r\n        width: '30px',\r\n        textAlign: 'left',\r\n        '&:hover': {\r\n            transform: 'scale(1.2)',\r\n        }\r\n    }\r\n  });\r\n\r\nconst DetailInfo = (props) => {\r\n    const classes = useStyles();\r\n    const favoritRepos = localStorage.getItem('favoritesId')\r\n    return (\r\n        <Container maxWidth='lg'>\r\n            <div className={classes.closeInfo} onClick={props.closeInfo}>\r\n                <i className=\"fas fa-arrow-left\"></i> Back\r\n            </div>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={4} style={{textAlign: 'center'}}>\r\n                    <img className={classes.repoImage} src={props.currentRepo.owner.avatar_url} alt={props.repoName}/>\r\n                    {favoritRepos != null && favoritRepos.includes(props.currentRepo.id) ?\r\n                    <div className={classes.heart} onClick={() => props.removeFromFavorites(props.currentRepo.id)}>\r\n                    <i className=\"fas fa-heart\" style={{fontSize: '25px', color: 'red'}} ></i>\r\n                    </div> :\r\n                    <div className={classes.heart} onClick={() => props.addToFavorites(props.currentRepo.id)}>\r\n                    <i className=\"far fa-heart\" style={{fontSize: '25px'}} ></i>\r\n                    </div>}\r\n                </Grid>\r\n                <Grid item xs={12} sm={8}>\r\n                    <p className={classes.title}>Full name:</p>\r\n                    <p className={classes.text}>{props.currentRepo.full_name}</p>\r\n                    <p className={classes.title}>Create at:</p>\r\n                    <p className={classes.text}>{props.currentRepo.created_at.substring(0,10)}</p>\r\n                    <p className={classes.title}>Autor:</p>\r\n                    <p className={classes.text}>{props.currentRepo.owner.login}</p>\r\n                    <p className={classes.title}>Description:</p>\r\n                    <p className={classes.text}>{props.currentRepo.description}</p>\r\n                    <p className={classes.title}>View on GitHub:</p>\r\n                    <p className={classes.text}><a href={props.currentRepo.html_url} target='blank'>{props.currentRepo.html_url}</a></p>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DetailInfo","import React from 'react';\nimport SplashScreen from './SplashScreen';\nimport SearchArea from './SearchArea';\nimport ReposList from './ReposList';\nimport Pagination from './Pagination';\nimport DetailInfo from './DetailInfo';\nimport arraySort from 'array-sort';\n\nclass App extends React.Component{\n  constructor() {\n    super()\n    this.state={\n      splashScreen: true,\n      searchTerm: '',\n      repos: [],\n      totalResults: 0,\n      currentPage: 1,\n      currentRepo: null,\n      sortBy: 'name',\n      favoritesId: [],\n    }\n  }\n  componentWillMount () {\n    setTimeout(() => {\n      this.setState({splashScreen: false})\n    }, 3000);\n  }\n\n  componentDidMount () {\n    this.setState({favoritesId: localStorage.getItem('favoritesId')})\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchTerm: e.target.value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`https://api.github.com/search/repositories?q=${this.state.searchTerm}+in:name`)\n    .then(data => data.json())\n    .then(data => {\n      this.setState ({\n        repos: arraySort([...data.items], this.state.sortBy, {reverse: true}),\n        totalResults: data.total_count,\n        currentPage: 1,\n        currentRepo: null\n      })\n    })\n  }\n\n  showMoreSearch = () => {\n    fetch(`https://api.github.com/search/repositories?q=${this.state.searchTerm}+in:name&page=${this.state.currentPage+1}`)\n    .then(data => data.json())\n    .then(data => {\n      let moreItems = this.state.repos.concat([...data.items]);\n      let newRepos = arraySort(moreItems, this.state.sortBy, {reverse: true})\n      this.setState({ repos: newRepos, currentPage: this.state.currentPage+1})\n    })\n  }\n\n  viewRepoInfo = (id) => {\n    const filteredRepos = this.state.repos.filter(repo => repo.id === id)\n    const newCurrentRepo = filteredRepos.length > 0 ? filteredRepos[0] : null\n    this.setState({ currentRepo: newCurrentRepo})\n  }\n\n  closeInfo = () => {\n    this.setState({currentRepo: null})\n  }\n\n  sortRepos = (e) => {\n    this.setState({ sortBy: e.target.value}, this.handleSubmit(e))\n\n  }\n\n  addToFavorites = (id) => {\n    const updateFavorites = [this.state.favoritesId, id].filter(Boolean).join(',')\n    localStorage.setItem('favoritesId', updateFavorites)\n    this.setState({\n      favoritesId: updateFavorites\n    })\n  }\n\n  removeFromFavorites = (id) => {\n    const oldFavorites = localStorage.getItem('favoritesId').split(',')\n    const filteredRepos = oldFavorites.filter(item => +item !== id)\n    localStorage.setItem('favoritesId', filteredRepos.join(','))\n    this.setState({\n      favoritesId: filteredRepos.join(',')\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n      {this.state.splashScreen === true ? \n      <SplashScreen splashScreen={this.state.splashScreen} />:\n      <div>\n      <SearchArea currentRepo={this.state.currentRepo} searchValue={this.state.searchTerm} handleSubmit={this.handleSubmit} handleChange={this.handleChange} repos={this.state.repos} sortBy={this.state.sortBy} sortRepos={this.sortRepos} />\n      {this.state.repos.length > 0 && this.state.currentRepo === null ? <ReposList addToFavorites={this.addToFavorites} removeFromFavorites={this.removeFromFavorites} repos={this.state.repos} viewRepoInfo={this.viewRepoInfo} /> : '' }\n      {this.state.currentRepo != null ? <DetailInfo addToFavorites={this.addToFavorites} removeFromFavorites={this.removeFromFavorites} currentRepo={this.state.currentRepo} closeInfo={this.closeInfo} /> : ''}\n      {this.state.totalResults > 30 && this.state.repos.length < this.state.totalResults && this.state.currentRepo === null ? <Pagination showMoreSearch={this.showMoreSearch} /> : ''}\n      </div>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}